@model GoalsProgressModel

@{
    ViewData["Title"] = "Home Page";
    ViewData["Title"] = "This is Matthew Mangold's personal website. It tracks my yearly goals as well as my accomplishments that I wish to make publicly available such as my progress in learning Japanese, Software Engineering, Chemistry, and achievements related to my own health.";
}

<style>
    .btn, .progress-bar {
        background-color: red !important;
        border-color: #030303 !important;
    }

    .btn:hover { background-color: #B90000 !important; }

    .btn:focus, btn:active {
        background-color: #8A0000 !important;
        border-color: #3A3A3A !important;
        outline: 3px auto #b90000 !important;
    }

    h4 {
        display: inline-block;
        margin-bottom: 0;
        padding-bottom: 0;
    }

    hr {
        background-color: #030303;
        border-color: #030303;
        margin-bottom: 10px;
        margin-top: 5px;
    }

    .card {
        border: 1px solid #B0B0B0;
        margin: 5px;
        margin-bottom: 10px;
        padding: 5px;
    }

    .h3section { margin: 15px; }
    .h4section {
        margin: 15px;
    }
</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.bundle.js"></script>

<h1>2019 Goals Status</h1>
<hr/>
<h2>Japanese</h2>
<div class="h3section">
    <h3>WaniKani progress</h3>
    <p>
        I have been learning radicals, kanji, and vocab as <strong>@Model.UserInformation?.Username</strong> on WaniKani since <strong>@Model.UserInformation?.CreationDate.ToString("M") @Model.UserInformation?.CreationDate.Year</strong>.
        I am currently at level <strong>@Model.UserInformation?.Level out of 60</strong>.
    </p>
    <p>I should be able to identify <strong>@Model.Radicals?.Count radicals</strong>.</p>
    <div class="h4section">
        <h4>Kanji Progress<hr/></h4>

        @{
            Model.TotalKanji = Model.TotalKanji == 0 ? 1 : Model.TotalKanji;
            Model.TotalVocab = Model.TotalVocab == 0 ? 1 : Model.TotalVocab;
            decimal kanjiAboveApprentice = Model.Kanji?.Count() ?? 0;
            var kanjiProgress = Convert.ToInt32(Math.Floor(kanjiAboveApprentice / 2027 * 100));
        }

        <div class="progress">
            <div class="progress-bar" role="progressbar" style="width: @kanjiProgress%;" aria-valuenow="@kanjiProgress" aria-valuemin="0" aria-valuemax="100">@kanjiProgress%</div>
            <span class="pull-right total">2027</span>
        </div>
        <div></div>
        <p>I should be able to identify these <strong>@Model.Kanji?.Count kanji</strong>:</p>
        <p>
            <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseKanji" aria-expanded="false" aria-controls="collapseExample">
                Show Kanji
            </button>
        </p>
        <div class="collapse" id="collapseKanji">
            <div class="card card-body">
                @{
                    if (Model.Kanji != null)
                    {
                        var lastKanjiItem = Model.Kanji?.Last();
                        foreach (var kanji in Model.Kanji?.OrderBy(k => k.UnlockedDate))
                        {
                            if (kanji.Equals(lastKanjiItem))
                            {
                                <span>@kanji.Character.</span>
                            }
                            else
                            {
                                <span>@kanji.Character, </span>
                            }
                        }
                    }
                }
            </div>
        </div>
    </div>
    <div class="h4section">
        <h4>Vocabulary Progression<hr/></h4>
        @{
            decimal vocabAboveApprentice = Model.Vocabulary?.Count() ?? 0;
            var vocabProgress = Convert.ToInt32(Math.Floor(vocabAboveApprentice / 6303 * 100));
        }

        <div class="progress">
            <div class="progress-bar" role="progressbar" style="width: @vocabProgress%;" aria-valuenow="@vocabProgress" aria-valuemin="0" aria-valuemax="100">@vocabProgress%</div>
            <span class="pull-right total">6303</span>
        </div>
        <div></div>
        <p>I should be able to identify these <strong>@Model.Vocabulary?.Count vocabulary items</strong>:</p>
        <p>
            <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseVocab" aria-expanded="false" aria-controls="collapseExample">
                Show Vocabulary
            </button>
        </p>
        <div class="collapse" id="collapseVocab">
            <div class="card card-body">
                @{
                    if (Model.Vocabulary != null)
                    {
                        var lastVocabularyItem = Model.Vocabulary?.Last();
                        foreach (var vocab in Model.Vocabulary?.OrderBy(k => k.UnlockedDate))
                        {
                            if (vocab.Equals(lastVocabularyItem))
                            {
                                <span>@vocab.Character.</span>
                            }
                            else
                            {
                                <span>@vocab.Character, </span>
                            }
                        }
                    }
                }
            </div>
        </div>
    </div>
</div>
<hr/>
<h2>Weight Loss</h2>

<div class="chart-container" style="position: relative;">
    <canvas id="chartjs-0" class="chartjs" style="display: block"></canvas>
</div>
<br/>

<script type="text/javascript">
    var weightsArray = [];
    var weightData = [];
    var timeData = [];
    @if (Model.SimpleWeights != null)
    {
        foreach (var weight in Model.SimpleWeights.OrderBy(w => w.Date))
        {
            //@:weightsArray.push({ 'x': @weight.DayOfYear, 'y': @(weight.Weight * 2.20462)  });

            // @:weightsArray.push({ 'x': new Date(@weight.Date.Year, @weight.Date.Month, @weight.Date.Day, @weight.Date.Hour, @weight.Date.Minute, @weight.Date.Second), 'y': @weight.Weight });
            // @:weightData.push(new Date(@weight.Date.Year, @weight.Date.Month, @weight.Date.Day, @weight.Date.Hour, @weight.Date.Minute, @weight.Date.Second))
            //@:timeData.push(@weight.DayOfYear);
            @:timeData.push(new Date(@weight.Date.Year, @weight.Date.Month - 1, @weight.Date.Day, @weight.Date.Hour, @weight.Date.Minute, @weight.Date.Second));
            @:weightData.push(@weight.Weight * 2.20462);
        }
        ;
    }

    var testChart = new Chart(document.getElementById("chartjs-0"),
        {
            "type": "line",
            "data": {
                "labels": timeData,
                "datasets": [
                    {
                        "data": weightData,
                        "fill": true,
                        "borderColor": "rgb(3, 3, 3)",
                        "lineTension": 0.1
                    }
                ]
            },
            "options": {
                "responsive": true,
                "elements": {
                    "point": {
                        "radius": 0
                    }
                },
                "scales": {
                    "xAxes": [
                        {
                            "distribution": "linear",
                            "type": "time",
                            "time": {
                                "displayFormats": {
                                    'millisecond': 'MMM DD',
                                    'second': 'MMM DD',
                                    'minute': 'MMM DD',
                                    'hour': 'MMM DD',
                                    'day': 'MMM DD',
                                    'week': 'MMM DD',
                                    'month': 'MMM DD',
                                    'quarter': 'MMM DD',
                                    'year': 'MMM DD'
                                }
                            }
                        }
                    ],
                    "yAxes": [
                        {
                            "ticks": {
                                "suggestedMin": 160,
                                "suggestedMax": 220
                            },
                            "scaleLabel": {
                                "display": true,
                                "labelString": 'Weight in Pounds'
                            }
                        }
                    ]

                },
                "legend": {
                    "display": false,
                    //"legendText" : ['Current','Vs last week/month/year','% Change']
                }
            }
        });
    //console.log(timeData);
    //console.log(weightData);
    //console.log(testChart);
</script>